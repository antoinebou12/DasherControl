# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # Provide the password for postgres
        env:
          POSTGRES_DB: diesel
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout branch
        uses: actions/checkout@v2
        
      - name: Install ubuntu Dependencies
        run: sudo apt-get install cmake make g++ build-essential libpq-dev libssl-dev
    
      - name: Install rust
        run: bash scripts/rust-setup-dev.sh
      
      - name: use default .env file
        run: source .env
          
      - name: Run cargo build
        continue-on-error: true
        run: export RUSTC_WRAPPER=sccache cargo build --release --all-features
          
      - name: Install JS
        run: bash scripts/js-dev-setup.sh
      
      - name: Install Dependencies
        run: npm install
        
      - name: Build frontend
        run: npm run build
